type Query {
  conversation(id: String!): Conversation!
  node(id: ID!): Node
}

type Mutation {
  updateConversation(id: String!, title: String!): Conversation!
  createMessage(conversationId: String!): Message!
}

type Subscription {
  messageCreated(conversationId: String!): Message!
  conversationUpdated: Conversation!
}

interface Node {
  id: ID!
}

type Conversation implements Node {
  id: ID!
  title: String!
  hasUnreadMessages: Boolean!
  messages: [Message!]!
}

type Message {
  id: ID!
  authorId: String!
  text: String!
  createdAt: String!
}
